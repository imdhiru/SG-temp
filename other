
import { authenticateType } from "./change.utils";
 
export const getTotalStep = (flowType: any) => {
  return {
    STAGE_NAMES: {
      SSF_1: "ssf-1",
      SSF_2: "ssf-2",
      LD_1: "ld-1",
      BD_1: "bd-1",
      BD_2: "bd-2",
      BD_3: "bd-3",
      DOC: "doc",
      AD_1: "ad-1",
      AD_2: "ad-2",
      ACD: "ACD",
      ACD_2: "acd-2",
      RP: "rp",
      FFD_1: "ffd-1",
    },
    STATE_URLS: {
      SUPER_SHORT_FORM: "sg/super-short-form",
      MYINFO_DETAILS: "sg/myinfo-details",
      PERSONAL_DETAILS: "sg/personal-details",
      EMPLOYMENT: "sg/employment",
      DOCUMENTS: "sg/document",
      CREDIT_CARD_DETAILS: "sg/credit-card-details",
      REVIEW: "sg/review",
      TAX_DETAILS: "sg/tax-details",
      ADDITIONAL_DATA: "sg/additional-data",
      OFFER: "sg/offer",
      LOAN_DETAILS: "sg/loan-details",
      LOAN_CALCULATOR:"sg/loan-calculator",
      CREDIT_LIMIT: "sg/credit-limit",
      THANKYOU: "sg/thankyou",
    },
    ETC_CASA: {
      totalStages: flowType === "ibnk" ? "4" : "5",
      startCount: flowType === "ibnk" ? "1" : "2",
      "ssf-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "ssf-2": {
        step: "2",
        path: "super-short-form",
        name: "MyInfo Details",
      },
      "bd-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "doc": {
        step: null,
        path: "document",
        name: "Document",
      },
      "ad-1": {
        step: null,
        path: "tax-details",
        name: "Tax Details",
      },
      "ad-2": {
        step: null,
        path: "product-details",
        name: "Product Details",
      },
      rp: {
        step: null,
        path: "rp",
        name: "Terms and Conditions",
      },
      'ffd-1': {
        step: null,
        path: "thankyou",
        name: "Thank You",
      }
    },
    NON_ETC_CASA: {
      totalStages: "6",
      startCount: flowType === "ibnk" ? "1" : "2",
      "ssf-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "ssf-2": {
        step: "2",
        path: "super-short-form",
        name: "MyInfo Details",
      },
      "bd-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "bd-3": {
        step: null,
        path: "employment",
        name: "Employment Details",
      },
      doc: {
        step: null,
        path: "document",
        name: "Document",
      },
      "ad-1": {
        step: null,
        path: "tax-details",
        name: "Tax Details",
      },
      "ad-2": {
        step: null,
        path: "product-details",
        name: "Product Details",
      },
      rp: {
        step: null,
        path: "rp",
        name: "Terms and Conditions",
      },
      'ffd-1': {
        step: null,
        path: "thankyou",
        name: "Thank You",
      }
    },
    ETC_CC: {
      totalStages: flowType === "ibnk" ? "4" : "5",
      startCount: flowType === "ibnk" ? "1" : "2",
      "ssf-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "ssf-2": {
        step: "2",
        path: "super-short-form",
        name: "MyInfo Details",
      },
      "ld-1": {
        step: null,
        path: "loan-calculator",
        name: "Loan Calculator"
      },
      "bd-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "bd-3": {
        step: null,
        path: "employment",
        name: "Employment Details",
      },
      doc: {
        step: null,
        path: "document",
        name: "Document",
      },
      "ad-2": {
        step: null,
        path: "credit-card-details",
        name: "Credit Card Details",
      },
      "ACD": {
        step: null,
        path: "trust-credit-limit-porting",
        name: "Trust Credit Limit Porting",
      },
      rp: {
        step: null,
        path: "rp",
        name: "Terms and Conditions",
      },
      'ffd-1': {
        step: null,
        path: "thankyou",
        name: "Thank You",
      }
    },
    NON_ETC_CC: {
      totalStages: flowType === "manual" ? "5" : "5",
      startCount: flowType === "manual" ? "1" : "2",
      "ssf-1": {
        step: "1",
        path: "super-short-form",
        name: "Basic Information",
      },
      "ssf-2": {
        step: "2",
        path: "super-short-form",
        name: "MyInfo Details",
      },
      "bd-2": {
        step: null,
        path: "personal-details",
        name: "Personal Details",
      },
      "ld-1": {
        step: null,
        path: "loan-calculator",
        name: "Loan Calculator"
      },
      "bd-1": {
        step: '1',
        path: "super-short-form",
        name: "Basic Information",
      },
      "bd-3": {
        step: null,
        path: "employment",
        name: "Employment Details",
      },
      doc: {
        step: null,
        path: "document",
        name: "Document",
      },
      "ad-2": {
        step: null,
        path: "credit-card-details",
        name: "Credit Card Details",
      },
      "ACD": {
        step: null,
        path: "trust-credit-limit-porting",
        name: "Trust Credit Limit Porting",
      },
      rp: {
        step: null,
        path: "rp",
        name: "Terms and Conditions",
      },
      'ffd-1': {
        step: null,
        path: "thankyou",
        name: "Thank You",
      }
    },
    DEFAULT_EDITABLE: ['name_of_employer', 'annual_income', 'email', 'mobile_number', 'marital_status']
  }
};





import { getTotalStep } from './getTotalStep';

describe('getTotalStep Function', () => {
    it('should return correct STAGE_NAMES structure', () => {
        const result = getTotalStep('ibnk');
        expect(result.STAGE_NAMES).toHaveProperty('SSF_1', 'ssf-1');
        expect(result.STAGE_NAMES).toHaveProperty('RP', 'rp');
        expect(result.STAGE_NAMES).toHaveProperty('FFD_1', 'ffd-1');
    });

    it('should return correct STATE_URLS structure', () => {
        const result = getTotalStep('ibnk');
        expect(result.STATE_URLS).toHaveProperty('SUPER_SHORT_FORM', 'sg/super-short-form');
        expect(result.STATE_URLS).toHaveProperty('THANKYOU', 'sg/thankyou');
        expect(result.STATE_URLS).toHaveProperty('CREDIT_LIMIT', 'sg/credit-limit');
    });

    it('should handle ETC_CASA flow type correctly', () => {
        const result = getTotalStep('ibnk');
        expect(result.ETC_CASA.totalStages).toBe('4');
        expect(result.ETC_CASA.startCount).toBe('1');
        expect(result.ETC_CASA['ssf-1']).toEqual({
            step: '1',
            path: 'super-short-form',
            name: 'Basic Information',
        });
        expect(result.ETC_CASA['ad-1']).toEqual({
            step: null,
            path: 'tax-details',
            name: 'Tax Details',
        });
    });

    it('should handle NON_ETC_CASA flow type correctly', () => {
        const result = getTotalStep('manual');
        expect(result.NON_ETC_CASA.totalStages).toBe('6');
        expect(result.NON_ETC_CASA.startCount).toBe('2');
        expect(result.NON_ETC_CASA['bd-3']).toEqual({
            step: null,
            path: 'employment',
            name: 'Employment Details',
        });
        expect(result.NON_ETC_CASA['rp']).toEqual({
            step: null,
            path: 'rp',
            name: 'Terms and Conditions',
        });
    });

    it('should handle ETC_CC flow type correctly', () => {
        const result = getTotalStep('ibnk');
        expect(result.ETC_CC.totalStages).toBe('4');
        expect(result.ETC_CC.startCount).toBe('1');
        expect(result.ETC_CC['ld-1']).toEqual({
            step: null,
            path: 'loan-calculator',
            name: 'Loan Calculator',
        });
        expect(result.ETC_CC['ACD']).toEqual({
            step: null,
            path: 'trust-credit-limit-porting',
            name: 'Trust Credit Limit Porting',
        });
    });

    it('should handle NON_ETC_CC flow type correctly', () => {
        const result = getTotalStep('manual');
        expect(result.NON_ETC_CC.totalStages).toBe('5');
        expect(result.NON_ETC_CC.startCount).toBe('1');
        expect(result.NON_ETC_CC['ad-2']).toEqual({
            step: null,
            path: 'credit-card-details',
            name: 'Credit Card Details',
        });
        expect(result.NON_ETC_CC['rp']).toEqual({
            step: null,
            path: 'rp',
            name: 'Terms and Conditions',
        });
    });

    it('should return the correct DEFAULT_EDITABLE fields', () => {
        const result = getTotalStep('ibnk');
        expect(result.DEFAULT_EDITABLE).toContain('name_of_employer');
        expect(result.DEFAULT_EDITABLE).toContain('email');
        expect(result.DEFAULT_EDITABLE).toContain('mobile_number');
    });
});
