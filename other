import { getUrl, getDeviceType } from "../common/change.utils";
import { KeyWithAnyModel } from "../model/common-model";
import { CONSTANTS } from "../common/constants";
import { checkProductDetails } from "../../services/common-service";
 
export const getErrorType = (errorType: string) => {
    let errorTypeList : KeyWithAnyModel = {
        '': 'na',
        'STOP': 'Save and Next',
        'CONTINUE': 'Try Again',
        'RESUBMIT': 'Review',
        'CORRECT': 'Review',
        'LOGIN': 'Continue to Login',
        'ROSHAN_CONTINUE': 'Ok, Continue'
    }
    return errorTypeList[errorType];
 }
 
export const getUserType = (userType: string) => {
   let userTypeLIst : KeyWithAnyModel = {
    'ntb' : 'New to Bank',
    'etb' : 'Existing to Bank',
    'etc' : 'Existing to cards or casa',
    'ntc' : 'New to cards or casa',
    'ecc' : 'Existing to credit cards applying for bundle',
    'c01' : 'Non resident of SG',
    'eca' : 'Existing to casa applying for bundle',
    'mdd' : 'Multiple dedupe'
   }
   return userTypeLIst[userType];
}
 
export const getStepName = (stage: KeyWithAnyModel) => {
    const productsSelector =  stage.stages.stages[0].stageInfo.products;
    const steps: KeyWithAnyModel = checkProductDetails(productsSelector) ? CONSTANTS.NON_ETC_CASA : CONSTANTS.NON_ETC_CC;
    if (steps[stage.stages.stages[0].stageId]) {
        return steps[stage.stages.stages[0].stageId].name;
    } else if (stage.stages.stages[0].stageId === 'ffd-1') {
        return 'thank you'
    } else {
        return 'na';
    }
}
 
export const loginval = () => {
    const isIbanking = getUrl.getParameterByName("SSCode") || getUrl.getParameterByName('transfer-token') || getUrl.getUpdatedStage().ccplChannel =="IBK" || getUrl.getUpdatedStage().ccplChannel =="MBNK";
    
    if (isIbanking != null && getDeviceType() !== 'Mobile Website') {
        return 'Ibanking';
    }
    else if (isIbanking != null && getDeviceType() === 'Mobile Website') {
        return 'SC Mobile';
    }
    else {
        return 'RTOB';
    }
}


export const removeStageIds = (stageSelector:any) => {
  let default_seq = ['ld-1','bd-2','bd-3','doc','ad-1','ad-2','ACD','rp'];
  Eif(stageSelector &&
    stageSelector.stages &&
    stageSelector.stages.length > 0) {
    Iif(stageSelector.stages[0].stageInfo.applicants['auth_mode_a_1'] !== 'XN') {
      default_seq.splice(default_seq.indexOf('bd-2'), 1);
    }
    Iif(stageSelector.stages[0].stageInfo.products[0]['product_category'] !== 'PL') {
      default_seq.splice(default_seq.indexOf('ld-1'), 1);
    }
    Eif(!(stageSelector.stages[0].stageInfo.applicant_documents && stageSelector.stages[0].stageInfo.applicant_documents.length > 0)) {
      default_seq.splice(default_seq.indexOf('doc'), 1);
    }
    Iif(stageSelector.stages[0].stageInfo.applicants['credit_limit_consent_a_1'] === 'Y') {
      default_seq.splice(default_seq.indexOf('ad-2'), 1);
    }
    Eif(stageSelector.stages[0].stageInfo.products[0]['product_category'] !== 'CA' && stageSelector.stages[0].stageInfo.products[0]['product_category'] !== 'SA') {
      default_seq.splice(default_seq.indexOf('ACD'), 1);
      default_seq.splice(default_seq.indexOf('ad-1'), 1);
    }
  }
  return default_seq;
}
